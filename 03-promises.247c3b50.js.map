{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,qBACjCE,QAASH,SAASC,cAAc,oBAChCG,UAAWJ,SAASC,cAAc,uBAGpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPT,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOpB,EAAKI,SAASiB,OAC3BC,EAAOF,OAAOpB,EAAKK,QAAQgB,OAC3BE,EAASH,OAAOpB,EAAKM,UAAUe,OAE5BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAG/BjB,EAFeiB,EAAI,EAEKL,GACrBM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,O,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,O,IAGjDU,GAASG,C,CAEXtB,EAAKI,SAASiB,MAAQ,GACtBrB,EAAKK,QAAQgB,MAAQ,GACrBrB,EAAKM,UAAUe,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInp: document.querySelector('input[name=delay]'),\n  stepInp: document.querySelector('input[name=step]'),\n  amountInp: document.querySelector('input[name=amount]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  let delay = Number(refs.delayInp.value);\n  const step = Number(refs.stepInp.value);\n  const amount = Number(refs.amountInp.value);\n\n  for (let i = 0; i < amount; i++) {\n    let position = i + 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n    delay += step;\n  }\n  refs.delayInp.value = '';\n  refs.stepInp.value = '';\n  refs.amountInp.value = '';\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInp","stepInp","amountInp","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.247c3b50.js.map"}